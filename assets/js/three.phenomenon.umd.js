!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.Phenomenon=r()}(this,function(){var e=function(e){function r(r){e.call(this);for(var t=r.geometry,a=r.multiplier,n=r.attributes,o=t.faces,i=t.vertices,f=i.length,h=3*o.length,m=[],s=0;s<o.length;s+=1)m.push(o[s].a,o[s].b,o[s].c);for(var d=new Uint32Array(a*h),u=0;u<a;u+=1)for(var c=0;c<h;c+=1)d[u*h+c]=m[c]+u*f;this.setIndex(new THREE.BufferAttribute(d,1));var v=new THREE.BufferAttribute(new Float32Array(a*f*3),3);this.addAttribute("position",v);for(var l=0,p=0;p<a;p+=1)for(var g=0;g<f;g+=1,l+=3){var S=i[g];v.array[l]=S.x,v.array[l+1]=S.y,v.array[l+2]=S.z}for(var y=0;y<n.length;y+=1){var E=new Float32Array(a*f*n[y].size),x=new THREE.BufferAttribute(E,n[y].size);this.addAttribute(n[y].name,x);for(var b=0;b<a;b+=1){var w=n[y].data(b,a);l=b*f*x.itemSize;for(var A=0;A<f;A+=1)for(var H=0;H<x.itemSize;H+=1)x.array[l]=w[H],l+=1}}return this}return e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r,r}(THREE.BufferGeometry),r=function(r){var t=r.material,a=r.uniforms,n=r.vertex,o=r.fragment;void 0===o&&(o=[]);var i=r.castShadow,f=new e(r),h=new THREE.Mesh(f,t);return h.geometry.computeVertexNormals(),t.onBeforeCompile=function(e){h.shader=e,Object.assign(e.uniforms,a);var r=n.replace(/(\r\n|\n|\r)/gm,""),f=r.match(/.+?(?=void)/)[0],m=r.match(/main\(\){(.*?)}/)[1];e.vertexShader=f+" \n "+e.vertexShader,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",m.replace("gl_Position =","vec3 transformed ="));for(var s=0;s<o.length;s+=1)e.fragmentShader=e.fragmentShader.replace(o[s][0],o[s][1]);if(t.onBeforeCompile=t.onBeforeCompile.toString().slice(0,-1)+"/* "+Math.random()+" */}",i){var d=new THREE.ShaderMaterial({vertexShader:e.vertexShader,fragmentShader:THREE.ShaderLib.shadow.fragmentShader,uniforms:a});h.castShadow=!0,h.customDepthMaterial=d,h.customDistanceMaterial=d}},{mesh:h,uniforms:a}};return THREE.Phenomenon=r,r});
